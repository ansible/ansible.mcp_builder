---
# Node.js and npm installation tasks

- name: Install Node.js and npm via system package manager
  ansible.builtin.package:
    name:
      - nodejs
      - npm
    state: present
  become: true

- name: Verify Node.js installation
  ansible.builtin.command: node --version
  register: common_node_version_output
  changed_when: false

- name: Assert Node.js is working
  ansible.builtin.assert:
    that:
      - common_node_version_output.rc == 0
      - common_node_version_output.stdout is defined
      - common_node_version_output.stdout != ""
    fail_msg: "Node.js installation verification failed - command 'node --version' did not work"
    success_msg: "Node.js {{ common_node_version_output.stdout }} verified successfully"

- name: Verify NPM installation
  ansible.builtin.command: npm --version
  register: common_npm_version_output
  changed_when: false

- name: Assert NPM is working
  ansible.builtin.assert:
    that:
      - common_npm_version_output.rc == 0
      - common_npm_version_output.stdout is defined
      - common_npm_version_output.stdout != ""
    fail_msg: "NPM installation verification failed - command 'npm --version' did not work"
    success_msg: "NPM {{ common_npm_version_output.stdout }} verified successfully"

- name: Get npm package name from current role registry (element 0)
  ansible.builtin.set_fact:
    common_npm_package: >-
      {%- for var_name in vars.keys() -%}
        {%- if var_name.endswith('_mcp_registry') -%}
          {%- set var_value = vars[var_name] -%}
          {%- if var_value is iterable and var_value is not string and var_value[0].lang == 'npm' -%}
            {{ var_value[0].name }}
      {%- endif -%}
        {%- endif -%}
      {%- endfor -%}

- name: Create MCP servers directory
  ansible.builtin.file:
    path: "{{ common_mcp_base_path }}/npm_installs"
    state: directory
    mode: "0755"
  when: common_npm_package is defined

- name: Initialize package.json for MCP servers
  ansible.builtin.command:
    cmd: npm init -y
    chdir: "{{ common_mcp_base_path }}/npm_installs"
    creates: "{{ common_mcp_base_path }}/npm_installs/package.json"
  when: common_npm_package is defined

- name: Check if npm package is already installed
  ansible.builtin.stat:
    path: "{{ common_mcp_base_path }}/npm_installs/node_modules/{{ common_npm_package }}"
  register: common_npm_package_check
  when: common_npm_package is defined

- name: Install npm package
  ansible.builtin.command:
    cmd: npm install {{ common_npm_package }}
    chdir: "{{ common_mcp_base_path }}/npm_installs"
  register: common_npm_install_result
  failed_when: false
  changed_when: common_npm_install_result.rc == 0
  when:
    - common_npm_package is defined
    - not common_npm_package_check.stat.exists

- name: Display successfully installed npm package
  ansible.builtin.debug:
    msg: "Successfully installed npm MCP package: {{ common_npm_package }}"
  when:
    - common_npm_package is defined
    - common_npm_install_result is defined
    - common_npm_install_result.rc == 0
    - ansible_verbosity >= 2

- name: Display failed npm package installation
  ansible.builtin.debug:
    msg: "Failed to install npm package: {{ common_npm_package }}"
  when:
    - common_npm_package is defined
    - common_npm_install_result is defined
    - common_npm_install_result.rc != 0
    - ansible_verbosity >= 2

- name: Verify npm package is accessible
  ansible.builtin.command:
    cmd: npx --prefix {{ common_mcp_base_path }}/npm_installs {{ common_npm_package }} --help
  when: common_npm_package is defined
  register: common_npm_verify_result
  changed_when: false
